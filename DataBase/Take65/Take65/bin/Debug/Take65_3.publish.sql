/*
Deployment script for Take65-V3

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Take65-V3"
:setvar DefaultFilePrefix "Take65-V3"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 34ffc146-7b2a-41be-91d7-5930e18a763c is skipped, element [dbo].[SuggestionBox].[Id] (SqlSimpleColumn) will not be renamed to SuggestionId';


GO
PRINT N'Rename refactoring operation with key bc3765ca-487f-4379-836c-4986d807ad00 is skipped, element [dbo].[SuggestionBoxTag].[Id] (SqlSimpleColumn) will not be renamed to SuggestionBoxTagId';


GO
PRINT N'Creating [dbo].[SuggestionBox]...';


GO
CREATE TABLE [dbo].[SuggestionBox] (
    [SuggestionId]          NUMERIC (18)   IDENTITY (1, 1) NOT NULL,
    [SuggestionName]        NVARCHAR (255) NULL,
    [SuggestionUrl]         NVARCHAR (255) NOT NULL,
    [SuggestionDescription] NVARCHAR (MAX) NULL,
    [SuggestionImage]       NVARCHAR (255) NULL,
    [register]              DATETIME       NULL,
    [lastupdate]            DATETIME       NULL,
    [deleted]               DATETIME       NULL,
    PRIMARY KEY CLUSTERED ([SuggestionId] ASC)
);


GO
PRINT N'Creating [dbo].[SuggestionBoxTag]...';


GO
CREATE TABLE [dbo].[SuggestionBoxTag] (
    [SuggestionBoxTagId] NUMERIC (18) IDENTITY (1, 1) NOT NULL,
    [SuggestionId]       NUMERIC (18) NOT NULL,
    [SystemTagId]        NUMERIC (18) NOT NULL,
    PRIMARY KEY CLUSTERED ([SuggestionBoxTagId] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[SuggestionBox]....';


GO
ALTER TABLE [dbo].[SuggestionBox]
    ADD DEFAULT getdate() FOR [register];


GO
PRINT N'Creating [dbo].[GetSuggestionBox]...';


GO
CREATE PROCEDURE [dbo].[GetSuggestionBox]
	@SuggestionId NUMERIC(18, 0) = NULL,
	@ReturnXml XML OUTPUT
AS
IF (@SuggestionId IS NULL)
BEGIN
	SET @ReturnXml =  (

		SELECT [SuggestionId] AS 'Id'
			  ,[SuggestionName] AS 'Name'
			  ,[SuggestionUrl] AS 'Url'
			  ,[SuggestionDescription] AS 'Description'
			  ,[SuggestionImage] AS 'Image'
			  ,[lastupdate] AS 'lastupdate'
			  ,[register] AS 'register'
		FROM [dbo].[SuggestionBox]
		WHERE [deleted] IS NULL
		ORDER BY register DESC
		FOR XML PATH('SuggestionBox'), TYPE, ROOT('ArrayOfSuggestionBox'))
	
END
ELSE
BEGIN
SET @ReturnXml =  (

		SELECT [SuggestionId] AS 'Id'
			  ,[SuggestionName] AS 'Name'
			  ,[SuggestionUrl] AS 'Url'
			  ,[SuggestionDescription] AS 'Description'
			  ,[SuggestionImage] AS 'Image'
			  ,[lastupdate] AS 'lastupdate'
			  ,[register] AS 'register'
		FROM [dbo].[SuggestionBox]
		WHERE [deleted] IS NULL
		AND SuggestionId = @SuggestionId
	FOR XML PATH('SuggestionBox'), TYPE)
END
GO
PRINT N'Creating [dbo].[SaveSuggestionBox]...';


GO

CREATE PROCEDURE [dbo].[SaveSuggestionBox]
	@SuggestionId NUMERIC(18,0)	= NULL,
	@SuggestionName NVARCHAR(255) = NULL,
	@SuggestionUrl NVARCHAR(250) = NULL,
	@SuggestionDescription NVARCHAR(max) = NULL,
	@SuggestionImage NVARCHAR(255) = NULL,
	
	@ReturnId NUMERIC(18 ,0) OUTPUT
AS

BEGIN
	IF @SuggestionId IS NOT NULL
	BEGIN
	
	
	UPDATE [dbo].[SuggestionBox]
	   SET [SuggestionName] = ISNULL(@SuggestionName, [SuggestionName])
		  ,[SuggestionUrl] = ISNULL(@SuggestionUrl, [SuggestionUrl])
		  ,[SuggestionDescription] = ISNULL(@SuggestionDescription, [SuggestionDescription])
		  ,[SuggestionImage] = ISNULL(@SuggestionImage, [SuggestionImage])
		  ,[lastupdate] = GETDATE()
	 WHERE [SuggestionId] = @SuggestionId
	
	SET @ReturnId = @SuggestionId
	
	END
	ELSE
	BEGIN
	
	INSERT INTO [dbo].[SuggestionBox]
           ([SuggestionName]
           ,[SuggestionUrl]
           ,[SuggestionDescription]
           ,[SuggestionImage]
           ,[register]
           )
     VALUES
           (@SuggestionName
           ,@SuggestionUrl
           ,@SuggestionDescription
           ,@SuggestionImage
           ,GETDATE()
           )
           
		SET @ReturnId = @@IDENTITY
		
	END
END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '34ffc146-7b2a-41be-91d7-5930e18a763c')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('34ffc146-7b2a-41be-91d7-5930e18a763c')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bc3765ca-487f-4379-836c-4986d807ad00')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bc3765ca-487f-4379-836c-4986d807ad00')

GO

GO
PRINT N'Update complete.'
GO
